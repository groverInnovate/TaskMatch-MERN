{"ast":null,"code":"import axios from 'axios';\n\n// Base URL for the backend\nconst API_BASE_URL = 'http://localhost:5003/api';\n\n// Create an Axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL\n});\n\n// Add an interceptor to include the token in every request\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token'); // Retrieve token from localStorage\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`; // Attach token\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","error","Promise","reject"],"sources":["/root/TaskMatch/client/src/services/apiService.js"],"sourcesContent":["import axios from 'axios';\n\n// Base URL for the backend\nconst API_BASE_URL = 'http://localhost:5003/api';\n\n// Create an Axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n});\n\n// Add an interceptor to include the token in every request\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');  // Retrieve token from localStorage\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;  // Attach token\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\nexport default api;\n\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,YAAY,GAAG,2BAA2B;;AAEhD;AACA,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH;AACX,CAAC,CAAC;;AAEF;AACAC,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAE;EAC9C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE,CAAC,CAAE;EACrD;EACA,OAAOD,MAAM;AACf,CAAC,EACAM,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeZ,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}